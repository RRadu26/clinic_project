{"ast":null,"code":"var _jsxFileName = \"/home/kokosu/Desktop/Facultate/Anul 3/Semestrul 2/IP/Proiect/source/clinic/src/components/DoctorFiles/DoctorViewMedication.js\",\n  _s = $RefreshSig$();\nimport DoctorPagesContent from './DoctorPagesContent';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getConsultationsUrl = 'http://localhost:8080/doctordata/getpatientreceipts';\nconst getpatienturl = 'http://localhost:8080/doctordata/getpatientbyid';\nconst DoctorViewMedication = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [med_data, setMetData] = useState([]);\n  const [patientData, setPatientData] = useState(null);\n  const tryfetchpatients = async () => {\n    const getdataform = {\n      id: id\n    };\n    const response = await fetch(getpatienturl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\",\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify(getdataform)\n    });\n    const responseStatus = await response.json();\n    setPatientData(responseStatus);\n  };\n  useEffect(() => {\n    tryfetchpatients();\n  }, []);\n  const tryfetchconsultations = async () => {\n    const getdataform = {\n      id: id\n    };\n    const response = await fetch(getConsultationsUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"*\",\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify(getdataform)\n    });\n    const responseStatus = await response.json();\n    setMetData(responseStatus);\n  };\n  useEffect(() => {\n    tryfetchconsultations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Body\",\n    children: [/*#__PURE__*/_jsxDEV(DoctorPagesContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DATAPAGE\",\n      children: [patientData != null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patientdetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", patientData[\"name\"], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Birthdate: \", patientData[\"birthdate\"], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), med_data === [] && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No consultations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this), med_data !== [] && med_data.map(med => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"consultationbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", med[\"date\"]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Doctor:\", med[\"d_name\"]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center',\n            borderBottom: 'solid 1px '\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: med['name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"medicationtable\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Specifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), med[\"drugs\"].map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: p['name']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p['specifications']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Observations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorViewMedication, \"jGPBGyr/vkSecKMRWVb7vj5TcSY=\", false, function () {\n  return [useParams];\n});\n_c = DoctorViewMedication;\nexport default DoctorViewMedication;\nvar _c;\n$RefreshReg$(_c, \"DoctorViewMedication\");","map":{"version":3,"names":["DoctorPagesContent","useEffect","useState","useParams","jsxDEV","_jsxDEV","getConsultationsUrl","getpatienturl","DoctorViewMedication","_s","id","med_data","setMetData","patientData","setPatientData","tryfetchpatients","getdataform","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","responseStatus","json","tryfetchconsultations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","med","style","textAlign","borderBottom","p","_c","$RefreshReg$"],"sources":["/home/kokosu/Desktop/Facultate/Anul 3/Semestrul 2/IP/Proiect/source/clinic/src/components/DoctorFiles/DoctorViewMedication.js"],"sourcesContent":["\nimport DoctorPagesContent from './DoctorPagesContent'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nconst getConsultationsUrl = 'http://localhost:8080/doctordata/getpatientreceipts'\nconst getpatienturl = 'http://localhost:8080/doctordata/getpatientbyid'\n\nconst DoctorViewMedication = () => {\n    const {id} = useParams()\n\n    const [med_data, setMetData] = useState([])\n    const [patientData, setPatientData] =useState(null)\n\n    const tryfetchpatients = async () => {\n        const getdataform = {id:id}\n        const response = await fetch(getpatienturl, {\n            method:'POST',\n            headers:{'Content-Type':'application/json', 'Access-Control-Allow-Origin': \"*\",\n            'Authorization': 'Bearer '+localStorage.getItem('token')},\n            body:JSON.stringify(getdataform)\n        })\n        const responseStatus = await response.json()\n        setPatientData(responseStatus)\n    }\n\n    useEffect(() => {tryfetchpatients()}, [])\n    const tryfetchconsultations = async () => {\n        const getdataform = {id:id}\n        const response = await fetch(getConsultationsUrl, {\n            method:'POST',\n            headers:{'Content-Type':'application/json', 'Access-Control-Allow-Origin': \"*\",\n            'Authorization': 'Bearer '+localStorage.getItem('token')},\n            body:JSON.stringify(getdataform)\n        })\n        const responseStatus = await response.json()\n        setMetData(responseStatus)\n    }\n\n    useEffect(() => {tryfetchconsultations()}, [])\n    return(\n        <div className='Body'>\n            <DoctorPagesContent/>\n        <div className='DATAPAGE'>\n            {patientData != null &&\n                <div className=\"patientdetails\">\n                <p>Name: {patientData[\"name\"]} </p>\n                <p>Birthdate: {patientData[\"birthdate\"]} </p>\n                \n                </div>\n            }\n        {\n            med_data === [] && <h3>No consultations</h3>\n        }\n        {\n            med_data !== [] && med_data.map((med) =>\n            <div className='consultationbox'>\n                <p>Date: {med[\"date\"]}</p>\n                <p>Doctor:{med[\"d_name\"]}</p>\n\n                <h3 style={{textAlign:'center', borderBottom:'solid 1px '}}><span>{med['name']}</span></h3>\n                <table className='medicationtable'>\n                <tr>\n                <th>Name</th>\n                <th>Specifications</th>\n                {/* to={'profile/' + ddata['id'] */}\n            </tr>\n                {med[\"drugs\"].map((p) => \n                    <tr>\n                        <td>{p['name']}</td>\n                        <td>{p['specifications']}</td>\n                    </tr>\n                )}\n                </table>\n                <p>Observations</p>\n            </div>\n            )\n        }\n        </div>\n        </div>\n    )\n\n}\nexport default DoctorViewMedication"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}